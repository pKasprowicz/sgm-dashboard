{
  "name": "snyk-resolve",
  "version": "1.0.0",
  "description": "Resolves the location of a node package given a path",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "lint": "jscs lib/*.js -v",
    "test": "npm run lint && tap test/*.test.js --cov --timeout=60",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "keywords": [
    "snyk"
  ],
  "author": {
    "name": "Remy Sharp"
  },
  "license": "Apache-2.0",
  "dependencies": {
    "debug": "^2.2.0",
    "then-fs": "^2.0.0"
  },
  "devDependencies": {
    "es6-promise": "^3.0.2",
    "jscs": "^2.8.0",
    "proxyquire": "^1.7.3",
    "tap": "^5.1.1",
    "tape": "^4.4.0",
    "semantic-release": "^4.3.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Snyk/resolve-package.git"
  },
  "readme": "# snyk-resolve\n\nFinds the filename for a given package name and starting directory. This is used to resolve packages in situations like npm@3 and deduped packages.\n\nSupports both async (via promises) and sync methods of looking up.\n\n## Usage\n\n```js\nvar resolve = require('snyk-resolve');\n\n// async (promise based)\nresolve('foo', process.cwd()).then(function (dir) {\n  // assuming that `foo` lived in the root of your drive\n  console.assert(dir === '/node_modules/foo');\n});\n\n// sync\nvar dir = resolve('bar', process.cwd());\n// throws Error('package not found bar')\n```\n\nSee tests for more examples.\n\n## Supports\n\n- npm@2 directory structure\n- npm@3 directory structure\n- deduped modules\n- scoped modules",
  "readmeFilename": "README.mdown",
  "bugs": {
    "url": "https://github.com/Snyk/resolve-package/issues"
  },
  "_id": "snyk-resolve@1.0.0",
  "dist": {
    "shasum": "5755d60b630723736f0766fc24fa0dc70abe86be"
  },
  "_from": "snyk-resolve@1.0.0",
  "_resolved": "https://registry.npmjs.org/snyk-resolve/-/snyk-resolve-1.0.0.tgz"
}
